version: "3"

services:
  jobmanager:
    platform: linux/x86_64
    image: flink:1.11.0-scala_2.11
    ports:
      - "8081:8081"
    #      - "5005:5005"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        classloader.resolve-order: parent-first
        heartbeat.timeout: 2000000
        akka.client.timeout: 200min
        akka.ask.timeout: 200min
    #       env.java.opts.taskmanager: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006"
    networks:
      - bridge


  taskmanager:
    platform: linux/x86_64
    image: flink:1.11.0-scala_2.11
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        heartbeat.timeout: 2000000
        akka.client.timeout: 10min
        akka.ask.timeout: 10min
    #        env.java.opts.taskmanager: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006"

    networks:
      - bridge

  kafka:
    build: ./docker/kafka-docker
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "log-event-stream-input:1:1,json-event-stream-output:1:1,si-simple-rules:1:1,s3-event-stream-output:1:1,json-event-stream-input:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
    depends_on:
      - zookeeper
    networks:
      - bridge

  zookeeper:
    image: zookeeper
    restart: always
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
    networks:
      - bridge

#  connect-standalone:
#    build:
#      context: docker/kafka-s3-connector
#      dockerfile: Dockerfile
#    container_name: connect-standalone
#    ports:
#      - 8083:8083
#    depends_on:
#      - kafka
#    volumes:
#      - /tmp:/tmp
#    networks:
#      - bridge

networks:
  bridge: