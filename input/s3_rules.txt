{
  "ruleId": "aws_s3_bucket_encryption",
  "ruleversion": "1.0",
  "disabled": false,
  "ruleDefinition": "from aws_s3 select json:toObject(awsS3) as obj insert into temp;from temp select json:getString(obj,'$.awsS3.ResourceType') as affected_resource_type,json:getString(obj,'$.awsS3.Details.Name') as affected_resource_name,json:getString(obj,'$.awsS3.Encryption.ServerSideEncryptionConfiguration') as encryption,json:getString(obj,'$.awsS3.Encryption.ServerSideEncryptionConfiguration.Rules[0].ApplyServerSideEncryptionByDefault.SSEAlgorithm') as algorithm insert into temp2;from temp2 select  affected_resource_name,affected_resource_type,ifThenElse(encryption == ' ','False','True') as encrypted,ifThenElse(encryption != ' ' and algorithm == 'aws:kms','Valid','Unknown') as algorithm_state insert into s3_outputstream",
  "action": "add",
  "type": [
    "aws_s3"
  ]
}


{
	"ruleId": "aws_s3_bucket_Everyone_READ_ACP",
	"ruleversion": "1.0",
  	"disabled": false,
	"ruleDefinition": "@info(name = 'query1') from S3Stream select json:toObject(json) as obj insert into temp; @info(name = 'query2') from temp select json:getString(obj, '$.awsS3.ResourceType') as affected_resource_type, json:getString(obj, '$.awsS3.Details.Name') as affected_resource_name, json:getObject ( obj, '$.awsS3.Acl.Grants') as grants insert into temp1;@info(name = 'query3') from temp1#json:tokenizeAsObject(grants, '$') select affected_resource_type,affected_resource_name,json:getString(jsonElement, '$.Grantee.Type') as granteeType, json:getString(jsonElement, '$.Grantee.URI') as granteeURI, json:getString(jsonElement, '$.Permission') as Permission insert into temp2;@info(name = 'query4') from temp2 select affected_resource_name,affected_resource_type,ifThenElse(granteeType == 'Group' and granteeURI == 'http://acs.amazonaws.com/groups/global/AllUsers' and Permission == 'READ_ACP', 'True', 'False') as publicView insert into temp3;@info(name = 'query5') from temp3[publicView == 'True'] select affected_resource_name,affected_resource_type,publicView insert into outputstream;",
	"action": "add",
  	"type": ["aws_s3"]
}



How easy it is to add another s3 access log stream to this processing  and correlate this access with last read access ?
Scans are run periodically And they emit CVE scores So What applications in our application view to data have high CVE ?
