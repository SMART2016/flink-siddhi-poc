{"ruleId":"S3BucketEncryption","ruleversion":"1.0","description":"Ensure all S3 buckets employ encryption-at-rest","disabled":false,"ruleDefinition":"@info(name = 'query1')from aws_s3 select json:toObject(awsS3) as obj insert into temp;@info(name = 'query2')from temp select json:getString(obj, '$.awsS3.ResourceType') as affected_resource_type, json:getString(obj, '$.awsS3.Details.Name') as affected_resource_name, json:getString(obj, '$.awsS3.Encryption.ServerSideEncryptionConfiguration') as sse insert into temp1;@info(name = 'query3')from temp1 select ifThenElse(sse is null, 'False' , 'True') as encrypted, ifThenElse(sse is null, json:toString(json:setElement('{}', '$', '[{}]', 'Rules')) , sse) as sse, affected_resource_type, affected_resource_name insert into temp2;@info(name = 'query4')from temp2#json:tokenizeAsObject(json:getObject( sse, '$.Rules'), '$') select affected_resource_type, affected_resource_name, encrypted, sse, ifThenElse(  json:getString(jsonElement, '$.ApplyServerSideEncryptionByDefault.SSEAlgorithm') == 'aws:kms'  or  json:getString(jsonElement, '$.ApplyServerSideEncryptionByDefault.SSEAlgorithm') == 'AES256' ,  'Valid', 'Unknown') as algorithm_state insert into temp3;@info(name = 'query5')from temp3[encrypted == 'False' or algorithm_state=='Unknown']select affected_resource_type, affected_resource_name, encrypted,algorithm_state, 'S3BucketEncryption' as ruleId insert into s3_outputstream;","action":"add","type":["aws_s3"]}