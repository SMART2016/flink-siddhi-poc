{"ruleId":"S3CloudTrailPublicAccess","ruleversion":"1.0","description":"Ensure the S3 bucket used to store CloudTrail logs is not publicly accessible. Note: Assumption is that S3 ACL","disabled":false,"ruleDefinition":"@info(name = 'query1')from aws_s3 select json:toObject(awsS3) as obj insert into temp;@info(name = 'query2')from temp select json:getString(obj, '$.awsS3.ResourceType') as affected_resource_type, json:getString(obj, '$.awsS3.Details.Name') as affected_resource_name, json:getObject ( obj, '$.awsS3.Acl.Grants') as grants,json:getString(obj,'$.awsS3.Policy') as bucket_policy insert into temp1;@info(name = 'query3')from temp1#json:tokenizeAsObject(grants, '$') select affected_resource_type,affected_resource_name,bucket_policy,json:getString(jsonElement, '$.Grantee.Type') as granteeType, json:getString(jsonElement, '$.Grantee.URI') as granteeURI, json:getString(jsonElement, '$.Permission') as Permission insert into temp2;@info(name = 'query4')from temp2 select affected_resource_name,affected_resource_type,bucket_policy,ifThenElse(granteeURI == 'http://acs.amazonaws.com/groups/global/AllUsers' or     granteeURI == 'https://acs.amazonaws.com/groups/global/Authenticated Users',     'True', 'False') as cloudtrail_log_publicView insert into temp3;@info(name = 'query5')from temp3 select ifThenElse(bucket_policy is null, 'False' , 'True') as bucket_policy_configured, ifThenElse(bucket_policy is null, json:toString(json:setElement('{}', '$', '[{}]', 'Statement'))  , bucket_policy) as bucket_policy, affected_resource_type, affected_resource_name ,cloudtrail_log_publicView insert into temp4;@info(name = 'query6')from temp4[cloudtrail_log_publicView =='True']#json:tokenizeAsObject(json:getObject( bucket_policy, '$.Statement'),'$')  select affected_resource_type,affected_resource_name,cloudtrail_log_publicView,bucket_policy_configured,ifThenElse(             json:getString(jsonElement, '$.Effect') == 'Allow' and  json:getString(jsonElement,'$.Principal') == '*'             or  json:getString(jsonElement,'$.Principal') == json:toString(json:setElement('{}', '$', '*', 'AWS')) , 'True', 'False') as cloudtrail_log_annonymous_access insert into temp5;@info(name = 'query7')from temp5[cloudtrail_log_annonymous_access == 'True' or cloudtrail_log_publicView == 'True'] select affected_resource_name,affected_resource_type,cloudtrail_log_publicView, cloudtrail_log_annonymous_access,bucket_policy_configured ,'S3BucketHttps' as ruleId insert into s3_outputstream;","action":"add","type":["aws_s3"]}