{"ruleId":"S3BucketHttps","ruleversion":"1.0","description":"At the Amazon S3 bucket level, you can configure permissions through a bucket policy making the objects accessible only through HTTPS","disabled":false,"ruleDefinition":"@info(name='query1')from aws_s3 select json:toObject(awsS3) as obj insert  into temp;@info(name='query2')from temp select json:getString(obj,'$.awsS3.ResourceType') as affected_resource_type,json:getString(obj,'$.awsS3.Details.Name') as affected_resource_name,json:getString(obj,'$.awsS3.Policy') as bucket_policy insert  into temp1;@info(name = 'query3')from temp1 select ifThenElse(bucket_policy is null, 'False' , 'True') as bucket_policy_configured, ifThenElse(bucket_policy is null, json:toString(json:setElement('{}', '$', '[{}]', 'Statement')) , bucket_policy) as bucket_policy, affected_resource_type, affected_resource_name insert into temp2;@info(name='query4')from temp2#json:tokenizeAsObject(json:getObject( bucket_policy, '$.Statement'),'$') select affected_resource_type,affected_resource_name,bucket_policy_configured,ifThenElse(json:getString(jsonElement, '$.Effect') == 'Deny' and  json:getString(jsonElement,'$.Condition.Bool.aws:SecureTransport') == 'false' ,'True', 'False') as s3_transport_secured insert  into temp3;@info(name='query5')from temp3[bucket_policy_configured == 'False' or s3_transport_secured == 'False'] select affected_resource_type,affected_resource_name,s3_transport_secured,bucket_policy_configured ,'S3CloudTrailPublicAccess' as ruleId insert  into s3_outputstream;","action":"add","type":["aws_s3"]}